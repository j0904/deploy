version: '3.8'
services: 

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: atproto
      POSTGRES_PASSWORD: atproto
      POSTGRES_DB: atproto
    ports:
      - "5432:5432"
    volumes:
      - ${DATAPATH:-/data/vm/}pgdata:/var/lib/postgresql/data
    restart: unless-stopped
           # Healthcheck ensures db is queryable when `docker-compose up --wait` completes
    healthcheck:
      test: 'pg_isready -U pg'
      interval: 500ms
      timeout: 10s
      retries: 20

  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: bind
        source: ${DATAPATH:-/data/vm/}/caddy/data
        target: /data
      - type: bind
        source: ${DATAPATH:-/data/vm/}/caddy/etc/caddy
        target: /etc/caddy
    restart: unless-stopped
  prod:
    image: ghcr.io/j0904/atproto:prod-84885047dfa6f55b96026990efceb02680dff3d3
    environment:
      DB_POSTGRES_URL: postgres://atproto:atproto@postgres:5432/atproto
    command: ["node", "./packages/prod-env/dist/prod.js"] 
    depends_on:
      - postgres
      - redis
    ports:
      - "2583:2583"
      - "2584:2584"  